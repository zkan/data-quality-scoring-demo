
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'demo'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'demo'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
docs-paths: ["docs"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

vars:
  # to create db table in the schema named as AUDIT
  dbt_dq_tool_schema: dq_audit
  dq_tools_enable_store_test_results: True

on-run-start:
  - '{{ dq_tools.create_dq_issue_log() }}'

on-run-end:
  - '{{ dq_tools.store_test_results(results) }}'

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  demo:
    staging:
      +materialized: view
  dq_tools:
    +enabled: true
    +materialized: table

# dbt docs generate && dbt docs serve
metrics:
  dq_tools:
    +enabled: True
